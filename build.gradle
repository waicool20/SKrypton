/*
 * The MIT License (MIT)
 *
 * Copyright (c) SKrypton by waicool20
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

buildscript {
    ext.kotlin_version = '1.1.51'

    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'com.github.johnrengelman.shadow' version '1.2.4'
    id "com.jfrog.artifactory" version "4.5.2"
}

allprojects {
    apply plugin: 'idea'
    idea {
        module {
            inheritOutputDirs = false
            outputDir = file('build/classes/main')
            testOutputDir = file('build/classes/test')
        }
    }
}

apply from: 'common.gradle'
apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'maven-publish'

group 'com.waicool20.skrypton'
version '1.0.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'

    /* sikulix */
    compile(group: "com.sikulix", name: "sikulixapi", version: "1.1.1-SNAPSHOT") {
        exclude group: "com.sikulix"
        exclude module: 'jadb'
    }

    /* Test */
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

shadowJar {
    classifier ""
    archiveName "${rootProject.name}.jar"
    include("com/waicool20/skrypton/**")
}

task testJar(type: ShadowJar) {
    from sourceSets.main.output
    from sourceSets.test.output
    configurations = [project.configurations.testRuntime]
    archiveName 'skrypton-test.jar'
    manifest {
        attributes 'Main-Class': 'com.waicool20.skrypton.MainKt'
    }
}

jar.enabled = false
build.finalizedBy shadowJar, ':skrypton-native:nativeJarRelease'

task buildAll {
    group 'build'
    dependsOn 'build', 'testJar', ':skrypton-native:nativeJarDebug'
}

//<editor-fold desc="Publishing">

if (publishApiKey == null || publishApiKey.isEmpty()) {
    tasks.findAll { it.group == 'publishing' }.each {
        it.enabled = false
    }
}

publishing {
    publications {
        apiJar(MavenPublication) {
            artifact shadowJar
            pom.withXml {
                asNode().with {
                    appendNode('name', rootProject.name)
                    appendNode('description', 'A browser automation library that uses SikuliX and doesn\'t grab grab your mouse')
                    appendNode('url', 'https://github.com/waicool20/SKrypton')
                    appendNode('packaging', 'jar')
                    appendNode('licenses').with {
                        appendNode('license').with {
                            appendNode('name', 'The MIT License (MIT)')
                            appendNode('url', 'http://opensource.org/licenses/MIT')
                        }
                    }
                    appendNode('developers').with {
                        appendNode('developer').with {
                            appendNode('name', 'waicool20')
                            appendNode('email', 'waicool20@gmail.com')
                            appendNode('organization', 'waicool20')
                            appendNode('organizationUrl', 'https://www.waicool20.com')
                            appendNode('timezone', 'UTC_OFFSET')
                        }
                    }
                    appendNode('scm').with {
                        appendNode('url', 'https://github.com/waicool20/SKrypton')
                        appendNode('connection', 'scm:git:git://github.com/waicool20/SKrypton.git')
                        appendNode('developerConnection', 'scm:git:ssh://github.com/waicool20/SKrypton.git')
                    }
                }
            }
        }
    }
}

artifactory {
    contextUrl = 'https://oss.jfrog.org/artifactory/'
    publish {
        repository {
            repoKey = 'oss-snapshot-local'
            username = "waicool20"
            password = publishApiKey
            maven = true
        }
        defaults {
            publications('apiJar')
            publishArtifacts = true
            properties = ['qa.level': 'basic', 'dev.team': 'core']
            publishPom = true
        }
    }
    resolve {
        repoKey = 'jcenter'
    }
}

publish.dependsOn 'artifactoryPublish'

//</editor-fold>
