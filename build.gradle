import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

buildscript {
    ext.kotlin_version = '1.1.50'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'com.github.johnrengelman.shadow' version '1.2.4'
}

allprojects {
    apply plugin: 'idea'
    idea {
        module {
            inheritOutputDirs = false
            outputDir = file('build/classes/main')
            testOutputDir = file('build/classes/test')
        }
    }
}

apply from: 'common.gradle'
apply plugin: 'java'
apply plugin: 'kotlin'

group 'com.waicool20'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'

    /* sikulix */
    compile(group: "com.sikulix", name: "sikulixapi", version: "1.1.1-SNAPSHOT") {
        exclude group: "com.sikulix"
        exclude module: 'jadb'
    }
    if (isLinux) compile(group: "com.sikulix", name: "sikulixlibslux", version: "1.1.1-SNAPSHOT")
    if (isMacOsX) compile(group: "com.sikulix", name: "sikulixlibsmac", version: "1.1.1-SNAPSHOT")
    if (isWindows) compile(group: "com.sikulix", name: "sikulixlibswin", version: "1.1.1-SNAPSHOT")

    /* Test */
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

task testJar(type: ShadowJar) {
    classifier 'test'
    from sourceSets.main.output.classesDir
    from sourceSets.test.output
    configurations = [project.configurations.testRuntime]
    classifier = null
    version = null
    manifest {
        attributes 'Main-Class': 'com.waicool20.skrypton.MainKt'
    }
}

jar.enabled = false
build.finalizedBy 'testJar'
